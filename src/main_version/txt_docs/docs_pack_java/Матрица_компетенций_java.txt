Уровень Junior 
Софты: 1. Желание учиться которое подтверждается делом.(Что изучено за последний год? Как это применяется?). 2. Проактивная работа с заказчиком. 3. Умение принимать ОС. 4. Многозадачность.
Харды: 1. Знание основ языка Java (синтаксис, примитивные типы данных, операторы, массивы). 2. Понимание основ ООП (наследование, инкапсуляция, полиморфизм). 3. Понимание работы JVM (стек, куча, сборщик мусора). 4. Умение работать с коллекциями (List, Set, Map). 5. Знание основ работы с файлами (java.io, java.nio). 6. Понимание работы исключений (try-catch-finally, throw, throws). 7. Умение подключать внешние библиотеки с использованием Maven/Gradle. 8. Основы работы с REST API (HTTP методы, коды ответа). 9. Умение писать юнит-тесты с использованием JUnit.

Уровень Junior+ Middle- 
Софты: 1. Желание учиться которое подтверждается делом (Что изучено за последний год? Как это применяется?). 2. Проактивная работа с заказчиком. 3. Умение принимать ОС. 4. Многозадачность.
Харды: 1. Продвинутое знание ООП (абстракция, интерфейсы, SOLID-принципы). 2. Понимание потоков и многопоточности (Thread, Executor, синхронизация). 3. Опыт работы с REST и SOAP API (Spring REST, Jersey). 4. Опыт работы с базами данных (SQL, Hibernate). 5. Умение писать интеграционные тесты (JUnit, TestNG). 6. Понимание работы с логированием (Log4j, SLF4J). 7. Опыт работы с Docker (запуск контейнеров). 8. Умение работать с Git (rebase, merge, cherry-pick). 9. Понимание устройства HTTP-протокола.

Уровень Middle+ 
Софты: 1. Желание учиться которое подтверждается делом.(Что изучено за последний год? Как это применяется?). 2. Проактивная работа с заказчиком. 3. Умение принимать ОС. 4. Умение доносить свои мысли до коллег. 5. Умение объяснить заказчику возможные варианты реализации. 6. Многозадачность 7. Умение выявить у себя недостаток знаний в определенном домене и закрыть его при необходимости.
Харды: 1. Уверенное владение Spring Framework (Spring Boot, Spring MVC, Spring Data). 2. Понимание асинхронного программирования (CompletableFuture, Reactive Streams). 3. Опыт работы с очередями (RabbitMQ, Kafka). 4. Углубленное понимание работы Hibernate (Entity, Lazy/Eager loading, кэширование). 5. Опыт написания автотестов на уровне сервиса и интеграции. 6. Опыт работы с микросервисной архитектурой (разбиение, взаимодействие). 7. Опыт конфигурирования Docker и Docker Compose. 8. Понимание работы с контейнерами в Kubernetes. 9. Опыт работы с API Gateway. 10. Понимание принципов работы транзакций (ACID). 11. Опыт работы с NoSQL базами (MongoDB, Redis). 12. Умение оптимизировать запросы к базе данных. 13. Понимание работы сервисов в stateless/stateful режиме. 14. Умение разрабатывать RESTful и gRPC API.

Уровень Senior 
Софты: 1. Желание учиться которое подтверждается делом.(Что изучено за последний год? Как это применяется?). 2. Проактивная работа с заказчиком. 3. Умение принимать ОС. 4. Умение доносить своим мысли до коллег. 5. Умение объяснить заказчику возможные варианты реализации. 6. Многозадачность 7. Умение выявить у себя недостаток знаний в определенном домене и закрыть его при необходимости. 8. Понимание как работа влияет на проект в целом: что нужно сделать в первом приоритете, что можно поставить на паузу, чего можно не делать вообще. 9. Умение сглаживать напряжение внутри команды, умение объяснить команде, что могут быть задачи интересные, но не полезные для проекта.
Харды: 1. Опыт построения архитектуры микросервисов. 2. Понимание работы с OAuth2, OpenID Connect. 3. Опыт работы с Circuit Breaker (Resilience4j, Hystrix). 4. Уверенное владение Kubernetes (поднятие кластера, деплой). 5. Опыт работы с API-first подходом. 6. Опыт работы с gRPC и WebSocket. 7. Понимание плюсов и минусов синхронного и асинхронного взаимодействия. 8. Умение профилировать и оптимизировать код (JProfiler). 9. Опыт настройки и работы с Service Mesh (Istio, Linkerd). 10. Умение настраивать CI/CD пайплайны (Jenkins, GitLab CI). 11. Опыт работы с реляционными и NoSQL базами (PostgreSQL, MongoDB, Redis). 12. Уверенное знание принципов работы Garbage Collector в JVM. 13. Опыт настройки мониторинга и алертинга (Prometheus, Grafana). 14. Опыт работы с распределенными системами.

Уровень Lead
Софты: 1. Желание учиться которое подтверждается делом.(Что изучено за последний год? Как это применяется?). 2. Проактивная работа с заказчиком 3. Умение принимать ОС. 4. Умение доносить свои мысли до коллег. 5. Умение объяснить заказчику возможные варианты реализации. 6. Многозадачность 7. Умение выявить у себя недостаток знаний в определенном домене и закрыть его при необходимости. 8. Понимание как работа влияет на проект в целом: что нужно сделать в первом приоритете, что можно поставить на паузу, чего можно не делать вообще. 9. Умение сглаживать напряжение внутри команды, умение объяснить команде, что могут быть задачи интересные, но не полезные для проекта 10. Наставничество над коллегами из своей компетенции с понятным результатом - приобретением ими желаемых скиллов. 11. Умение давать ученикам нетравматичную ОС. 12. Умение проведения встреч one-2-one. 

Харды: Харды Senior и Lead не отличаются.
Многозадачность - в термин вкладывается НЕ возможность в каждый момент времени думать сразу о нескольких задачах, а возможность переключаться между задачами/проектами (от 2х - оптимально, до 5ти - максимально) без сильной потери эффективности.
